{"version":3,"sources":["constants/constants.jsx","components/item/item.jsx","components/item-list/item-list.jsx","components/item-filter/item-filter.jsx","components/item-edit/item-edit.jsx","index.js"],"names":["showElement","display","hideElement","showLine","textDecoration","hideLine","Item","state","displayValue","displayEdit","inputText","handleDeleteClick","props","item","deleteItem","index","handleInputNumberChange","event","parseInt","target","value","isNaN","updateNumber","handValueClick","updateDone","handleEditClick","setState","handleInputTextChange","handleSaveClick","updateValue","this","line","done","type","number","onChange","style","onClick","React","Component","propType","PropTypes","object","isRequired","func","ItemList","itemList","map","key","ItemFilter","todoList","handleInputChange","push","handleAllClick","handleProcessClick","handleDoneClick","placeholder","className","ItemEdit","handleEnterKey","keyCode","addItem","length","splice","i","sort","sortItem","a","b","flag","displayNoResult","displayItemFilter","onKeyUp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4cbc5ad.chunk.js","sourcesContent":["const showElement = {\n    display: \"block\",\n}\nconst hideElement = {\n    display: \"none\",\n}\nconst showLine = {\n    textDecoration: \"line-through\",\n}\nconst hideLine = {\n    textDecoration: \"none\",\n}\nexport {showElement, hideElement, showLine, hideLine};","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport \"./item.css\";\nimport {showElement, hideElement, showLine, hideLine} from \"../../constants/constants\";\n\nexport default class Item extends React.Component {\n\n    static propType = {\n        item: PropTypes.object.isRequired,\n        deleteItem: PropTypes.func.isRequired,\n        updateNumber: PropTypes.func.isRequired,\n        updateValue: PropTypes.func.isRequired,\n        updateDone: PropTypes.func.isRequired,\n    }\n\n    state = {\n        displayValue: showElement,\n        displayEdit: hideElement,\n        inputText: \"\",\n    }\n\n    handleDeleteClick = () => {\n        const {item, deleteItem} = this.props;\n        deleteItem(item.index);\n    }\n\n    handleInputNumberChange = (event) => {\n        const inputText = parseInt(event.target.value);\n        if(isNaN(inputText)) return;\n        const {item, updateNumber} = this.props;\n        updateNumber(item.index, inputText);\n    }\n\n    handValueClick = () => {\n        const {item, updateDone} = this.props;\n        updateDone(item.index);\n    }\n\n    handleEditClick = () => {\n        let {displayValue, displayEdit} = this.state;\n        displayValue = displayValue === showElement ? hideElement : showElement;\n        displayEdit = displayEdit === hideElement ? showElement : hideElement;\n        this.setState({\n            displayValue: displayValue, \n            displayEdit: displayEdit,\n        });\n    }\n\n    handleInputTextChange = (event) => {\n        const inputText = event.target.value;\n        this.setState({inputText});\n    }\n\n    handleSaveClick = () => {\n        const {item, updateValue} = this.props;\n        const {inputText} = this.state;\n        if(inputText !== \"\") {\n            updateValue(item.index, inputText);\n        }\n        this.handleEditClick();\n        this.setState({\n            inputText: \"\",\n        });\n    }\n    \n    render() {\n        const {item} = this.props;\n        const {displayValue, displayEdit, inputText} = this.state;\n        const line = item.done ? showLine : hideLine;\n        return (\n        <li>\n            <input type=\"number\" value={item.number} onChange={this.handleInputNumberChange}/> \n            <div style={displayValue}>\n                <span style={line} onClick={this.handValueClick}>{item.value}</span> \n                <button onClick={this.handleEditClick}>Edit</button>\n            </div>\n            <div style={displayEdit}>\n                <input type=\"text\" value={inputText} onChange={this.handleInputTextChange} />\n                <button onClick={this.handleSaveClick}>Save</button>\n                <button onClick={this.handleEditClick}>Cancel</button>\n            </div>\n            <button onClick={this.handleDeleteClick}>Delete</button>\n        </li>\n        )\n    };\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Item from \"../item/item\";\nimport \"./item-list.css\";\n\nexport default class ItemList extends React.Component {\n    \n    static propTypes = {\n        itemList: PropTypes.array.isRequired,\n        deleteItem: PropTypes.func.isRequired,\n        updateNumber: PropTypes.func.isRequired,\n        updateValue: PropTypes.func.isRequired,\n        updateDone: PropTypes.func.isRequired,\n    }\n\n    render() {\n        const {itemList, deleteItem, updateNumber, updateValue, updateDone} = this.props;\n        return (\n        <ul>\n            {itemList.map((item, index) => <Item key={index} item={item} deleteItem={deleteItem} updateNumber={updateNumber} updateValue={updateValue} updateDone={updateDone} />)}\n        </ul>\n        )\n    };\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport ItemList from \"../item-list/item-list\";\nimport \"./item-filter.css\";\n\nexport default class ItemFilter extends React.Component {\n\n    static propTypes = {\n        todoList: PropTypes.array.isRequired,\n        deleteItem: PropTypes.func.isRequired,\n        updateNumber: PropTypes.func.isRequired,\n        updateValue: PropTypes.func.isRequired,\n        updateDone: PropTypes.func.isRequired,\n    }\n\n    state = {\n        itemList: this.props.todoList,\n        inputText: \"\",\n    }\n\n    handleInputChange = (event) => {\n        const inputText = event.target.value;\n        const {todoList} = this.props;\n        if(inputText === \"\") {\n            this.setState({\n                inputText,\n                itemList: todoList,\n            });\n            return;\n        }\n        let itemList = [];\n        for(const item of todoList) {\n            if(item.value === inputText) {\n                itemList.push(item);\n            }\n        }\n        this.setState({\n            inputText,\n            itemList,\n        });\n    }\n\n    handleAllClick = () => {\n        //console.log(\"test\");\n        const {todoList} = this.props;\n        this.setState({\n            itemList: todoList,\n        });\n    }\n\n    handleProcessClick = () => {\n        const {todoList} = this.props;\n        let itemList = [];\n        for(const item of todoList) {\n            if(!item.done) {\n                itemList.push(item);\n            }\n        }\n        this.setState({itemList});\n    }\n\n    handleDoneClick = () => {\n        const {todoList} = this.props;\n        let itemList = [];\n        for(const item of todoList) {\n            if(item.done) {\n                itemList.push(item);\n            }\n        }\n        this.setState({itemList});\n    }\n\n    render() {\n        const {itemList, inputText} = this.state;\n        const {deleteItem, updateNumber, updateValue, updateDone} = this.props;\n        return (\n        <div>\n            <input type=\"text\" placeholder=\"search the todo list\" value={inputText} onChange={this.handleInputChange} />\n            <h4 className=\"title\">Todo List</h4>\n            <ItemList itemList={itemList} deleteItem={deleteItem} updateNumber={updateNumber} updateValue={updateValue} updateDone={updateDone} />\n            <div className=\"filter\">\n                <span className=\"tab\" onClick={this.handleAllClick}>All</span> &nbsp;\n                <span className=\"tab\" onClick={this.handleProcessClick}>Processing</span> &nbsp;\n                <span className=\"tab\" onClick={this.handleDoneClick}>Done</span>\n            </div>\n        </div>\n        )\n    };\n}\n","import React from 'react';\nimport ItemFilter from \"../item-filter/item-filter\"\nimport {showElement, hideElement} from \"../../constants/constants\";\nimport \"./item-edit.css\";\n\nexport default class ItemEdit extends React.Component {\n\n    state = {\n        todoList: [],\n        inputText: \"\",\n    }\n\n    handleInputChange = (event) => {\n        const inputText = event.target.value;\n        this.setState({inputText});\n    }\n\n    handleEnterKey = (event) => {\n        const {inputText} = this.state;\n        if(inputText !== \"\" && event.keyCode === 13) {\n            this.addItem();\n        }\n    }\n\n    addItem = () => {\n        const {inputText} = this.state;\n        let {todoList} = this.state;\n        const item = {number: 1, value: inputText, done: false, index: todoList.length};\n        todoList.push(item);\n        this.setState({\n            todoList: todoList,\n            inputText: \"\", \n        });\n    }\n\n    deleteItem = (index) => {\n        const {todoList} = this.state;\n        todoList.splice(index, 1);\n        // update index from index\n        for(let i = index; i < todoList.length; i++) {\n            todoList[i] = {...todoList[i], index: i};\n        }\n        this.setState({todoList});\n    }\n\n    updateNumber = (index, number) => {\n        let {todoList} = this.state;\n        todoList[index].number = number;\n        todoList.sort(this.sortItem);\n        // update index\n        for(let i = 0; i < todoList.length; i++) {\n            todoList[i] = {...todoList[i], index: i};\n        }\n        this.setState({todoList});\n    }\n\n    sortItem = (a, b) => {\n        return a.number - b.number;\n    }\n\n    updateValue = (index, value) => {\n        let {todoList} = this.state;\n        todoList[index].value = value;\n        this.setState({todoList});\n    }\n\n    updateDone = (index) => {\n        let {todoList} = this.state;\n        const flag = todoList[index].done;\n        todoList[index].done = !flag;\n        this.setState({todoList});\n    }\n\n    render() {\n        const {todoList, inputText} = this.state;\n        const displayNoResult = todoList.length === 0 ? showElement : hideElement;\n        const displayItemFilter = todoList.length === 0 ? hideElement : showElement;\n        return (\n            <div className=\"wrapper\">\n                <p style={displayNoResult}>No result.</p>\n                <div style={displayItemFilter}>\n                    <ItemFilter todoList={todoList} deleteItem={this.deleteItem} updateNumber={this.updateNumber} updateValue={this.updateValue} updateDone={this.updateDone} /> \n                </div>\n                <input type=\"text\" placeholder=\"add item to todo list\" value={inputText} onChange={this.handleInputChange} onKeyUp={this.handleEnterKey}/>\n            </div>\n        )\n    };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ItemEdit from './components/item-edit/item-edit.jsx';\n\nReactDOM.render(<ItemEdit />, document.getElementById('root'));\n\n"],"sourceRoot":""}